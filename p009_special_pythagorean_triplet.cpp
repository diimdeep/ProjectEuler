//  A Pythagorean triplet is a set of three natural numbers, a  b  c, for which,

//  a^2 + b^2 = c^2
//  For example, 3^2 + 4^2 = 9 + 16 = 25 = 5^2.

//  There exists exactly one Pythagorean triplet for which a + b + c = 1000.
//  Find the product abc.
//  https://projecteuler.net/problem=9

//  http://www.wolframalpha.com/input/?i=a%5E2+%2B+b%5E2+%3D+c%5E2%2C+a%2Bb%2Bc%3D1000%2C+a%3E0%2C+b%3E0%2C+c%3E0%2C+a*b*c%3Dx

//  http://en.wikipedia.org/wiki/Pythagorean_triple#Generating_a_triple
//  Euclid's formula is a fundamental formula for generating Pythagorean triples given an arbitrary pair of positive integers m and n with m > n. The formula states that the integers
//  a = m^2 - n^2, b = 2mn, c = m^2 + n^2
//  form a Pythagorean triple. The triple generated by Euclid's formula is primitive if and only if m and n are coprime and m âˆ’ n is odd.


#include <iostream>
#include <complex>

using namespace std;

int main(int argc, const char * argv[])
{
    int range = 50;
    int result = 0;
    for (int n = 0; n < range; n++) {
        for (int m = 0; m < range; m++) {
            int a = pow(m, 2) - pow(n, 2);
            int b = 2*m*n;
            int c = pow(m, 2) + pow(n, 2);
            if(a + b + c == 1000 && a > 0 && b > 0 && c > 0){
                result = a*b*c;
                cout << result << endl;
                cout << a << " " << b << " " << c << " " << endl;
                break;
            }
        }
    }
}

